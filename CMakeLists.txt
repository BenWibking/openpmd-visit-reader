# DO NOT EDIT THIS FILE! THIS FILE IS AUTOMATICALLY GENERATED BY xml2cmake
CMAKE_MINIMUM_REQUIRED(VERSION 3.10 FATAL_ERROR)
SET(VISIT_PLUGIN_DIR "/ccs/home/wibking/.visit/3.4.2/linux-x86_64/plugins")
INCLUDE("/sw/andes/visit/3.4.2/linux-x86_64/include/PluginVsInstall.cmake")
INCLUDE("VisItLibraryDependencies.cmake")

PROJECT(openpmd_database)

SET(COMMON_SOURCES
openpmdPluginInfo.C
openpmdCommonPluginInfo.C
)

SET(LIBI_SOURCES
openpmdPluginInfo.C
)

SET(LIBM_SOURCES
openpmdMDServerPluginInfo.C
${COMMON_SOURCES}
avtopenpmdFileFormat.C
)

SET(LIBE_SOURCES
openpmdEnginePluginInfo.C
${COMMON_SOURCES}
avtopenpmdFileFormat.C
)

INCLUDE_DIRECTORIES(
${CMAKE_CURRENT_SOURCE_DIR}
${VISIT_DATABASE_INCLUDES}
)

LINK_DIRECTORIES(${VISIT_LIBRARY_DIR})

# OpenPMD-api superbuild
set(openPMD_USE_PYTHON OFF CACHE BOOL "")
set(openPMD_BUILD_TESTING OFF CACHE BOOL "")
set(openPMD_BUILD_EXAMPLES OFF CACHE BOOL "")
set(openPMD_BUILD_CLI_TOOLS OFF CACHE BOOL "")
set(openPMD_INSTALL OFF CACHE BOOL "")
add_subdirectory(${openpmd_database_SOURCE_DIR}/extern/openPMD-api ${openpmd_database_BINARY_DIR}/openPMD-api)
include_directories(${OpenPMD_INCLUDE_DIRS_RET})

set(CPPTRACE_BUILD_TESTING OFF CACHE BOOL "" FORCE)
set(CPPTRACE_BUILD_TOOLS OFF CACHE BOOL "" FORCE)
set(CPPTRACE_BUILD_BENCHMARKING OFF CACHE BOOL "" FORCE)
set(CPPTRACE_BUILD_SHARED OFF CACHE BOOL "" FORCE)
set(CPPTRACE_GET_SYMBOLS_WITH_LIBDWARF OFF CACHE BOOL "" FORCE)
set(CPPTRACE_USE_EXTERNAL_LIBDWARF OFF CACHE BOOL "" FORCE)
set(CPPTRACE_USE_EXTERNAL_ZSTD OFF CACHE BOOL "" FORCE)
set(CPPTRACE_GET_SYMBOLS_WITH_ADDR2LINE ON CACHE BOOL "" FORCE)
set(CPPTRACE_GET_SYMBOLS_WITH_NOTHING OFF CACHE BOOL "" FORCE)
add_subdirectory(${openpmd_database_SOURCE_DIR}/extern/cpptrace ${openpmd_database_BINARY_DIR}/cpptrace)

ADD_LIBRARY(IopenpmdDatabase ${LIBI_SOURCES})
TARGET_LINK_LIBRARIES(IopenpmdDatabase visitcommon openPMD::openPMD cpptrace::cpptrace)
SET(INSTALLTARGETS IopenpmdDatabase)

IF(NOT VISIT_ENGINE_ONLY AND NOT VISIT_DBIO_ONLY)
    ADD_LIBRARY(MopenpmdDatabase ${LIBM_SOURCES})
    TARGET_LINK_LIBRARIES(MopenpmdDatabase visitcommon avtdbatts avtdatabase_ser openPMD::openPMD cpptrace::cpptrace)
    ADD_TARGET_DEFINITIONS(MopenpmdDatabase MDSERVER)
    SET(INSTALLTARGETS ${INSTALLTARGETS} MopenpmdDatabase)
ENDIF(NOT VISIT_ENGINE_ONLY AND NOT VISIT_DBIO_ONLY)

ADD_LIBRARY(EopenpmdDatabase_ser ${LIBE_SOURCES})
TARGET_LINK_LIBRARIES(EopenpmdDatabase_ser visitcommon avtpipeline_ser avtdatabase_ser openPMD::openPMD cpptrace::cpptrace)
ADD_TARGET_DEFINITIONS(EopenpmdDatabase_ser ENGINE)
SET(INSTALLTARGETS ${INSTALLTARGETS} EopenpmdDatabase_ser)

IF(VISIT_PARALLEL)
    ADD_PARALLEL_LIBRARY(EopenpmdDatabase_par ${LIBE_SOURCES})
    TARGET_LINK_LIBRARIES(EopenpmdDatabase_par visitcommon avtpipeline_par avtdatabase_par openPMD::openPMD cpptrace::cpptrace)
    ADD_TARGET_DEFINITIONS(EopenpmdDatabase_par ENGINE)
    SET(INSTALLTARGETS ${INSTALLTARGETS} EopenpmdDatabase_par)
ENDIF(VISIT_PARALLEL)

VISIT_INSTALL_DATABASE_PLUGINS(${INSTALLTARGETS})
